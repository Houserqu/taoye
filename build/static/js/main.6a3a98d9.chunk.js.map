{"version":3,"sources":["logo.svg","images/1.png","images/2.png","images/3.png","images/4.png","images/none.png","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","title","content","image","require","answer","question","Option","App","state","resultImg","logo","selectArticleIndex","selectText","listenMouseSelect","id","document","getElementById","onmouseup","_this","setState","window","getSelection","toString","handleSelectArticle","v","addAnswer","_this$state","es_modal","confirm","react_default","a","createElement","error","handleGenerate","_this$state2","secondsToGo","modal","success","iconType","timer","setInterval","update","setTimeout","clearInterval","destroy","message","this","_this$state3","className","src","alt","style","color","row","gutter","col","span","marginBottom","es_select","placeholder","onChange","map","i","value","key","es_button","type","width","onClick","card","height","concat","display","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a3a98d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.3bbcdeb0.png\";","module.exports = __webpack_public_path__ + \"static/media/2.b87a093d.png\";","module.exports = __webpack_public_path__ + \"static/media/3.d42a919a.png\";","module.exports = __webpack_public_path__ + \"static/media/4.2068a3f0.png\";","module.exports = __webpack_public_path__ + \"static/media/none.4bc9de98.png\";","const data = [\n  {\n    title: \"文章一\",\n    content:'推荐答案艾萨克• 牛顿 （ [isaacnewton] ） 是英国伟大的数学家 、 物理学家 、 天文学家和自然哲学家 ，其研究领域包括 了物理学 、 数学 、 天文学 、 神学 、 自    然哲学和炼金术',\n    image: require('./images/1.png'),\n    answer: '英国',\n    question: '牛顿是哪国的天文学家？'\n  },\n  {\n    title: \"文章二\",\n    content: '葛朗台太太在著名 小说 《 欧也妮葛朗台 》 里 ， 作者巴尔扎克',\n    image: require('./images/2.png'),\n    answer: '巴尔扎克',\n    question: '欧也妮葛朗台的作者是谁？'\n  },\n  {\n    title: \"文章三\",\n    content:'1924年蒙古人民共和国成立后，改库伦为乌兰巴托，并定为首都，意思是“红色英雄城”',\n    image: require('./images/3.png'),\n    answer: '乌兰巴托',\n    question: '蒙古首都在哪里？'\n  },\n  {\n    title: \"文章四\",\n    content:'人体消化道中的最长器官是小肠，长约5~6米，盘曲在腹腔内，是消化和吸收的主要器官。',\n    image: require('./images/4.png'),\n    answer: '小肠',\n    question: '人体消化道中最长的器官是？'\n  }\n]\n\nexport default data;\n","import React, { Component } from \"react\"\nimport logo from \"./logo.svg\"\nimport { Button, Row, Col, Select, Card, Modal, message } from \"antd\"\nimport data from \"./data\"\nimport \"./App.css\"\n\nconst { Option } = Select\n\nclass App extends Component {\n  state = {\n    data,\n    resultImg: logo,\n    selectArticleIndex: null,\n    selectText: \"\", // 选择的文本\n    question: {\n      // 生成的问题\n      title: \"\",\n      answer: \"\",\n      question: \"\",\n      image: null\n    }\n  }\n\n  componentDidMount() {\n    this.listenMouseSelect(\"article\")\n  }\n\n  listenMouseSelect = id => {\n    var oContent = document.getElementById(id)\n    oContent.onmouseup = () => {\n      this.setState({ selectText: window.getSelection().toString() })\n    }\n  }\n\n  handleSelectArticle = v => {\n    this.setState({\n      selectArticleIndex: v\n    })\n  }\n\n  addAnswer = () => {\n    const { selectText, selectArticleIndex } = this.state;\n    if (selectArticleIndex >= 0 && selectText) {\n      Modal.confirm({\n        title: \"添加答案\",\n        content: (\n          <p>\n            你选择的答案为:\n            <br />\n            <b>{selectText}</b>\n          </p>\n        )\n      })\n    } else {\n      Modal.error({\n        title: '错误',\n        content: '请先选择文章和答案！'\n      })\n    }\n  }\n\n  // 生成问题\n  handleGenerate = () => {\n    const { selectArticleIndex, selectText, data } = this.state\n    if (selectArticleIndex >= 0 && selectText) {\n      // 匹配答案\n      let secondsToGo = 3;\n      const modal = Modal.success({\n        title: '任务创建成功',\n        content: '系统正在生成问题，请稍等',\n        iconType: 'loading'\n      });\n      const timer = setInterval(() => {\n        secondsToGo -= 1;\n        modal.update({\n          content: '系统正在生成问题，请稍等',\n        });\n      }, 1000);\n      setTimeout(() => {\n        clearInterval(timer);\n        modal.destroy();\n\n\n        if (selectText == data[selectArticleIndex].answer) {\n          // 成功\n          message.success('生成成功')\n          this.setState({\n            question: {\n              title: data[selectArticleIndex].title,\n              answer: selectText,\n              question: data[selectArticleIndex].question,\n              image: data[selectArticleIndex].image\n            }\n          })\n        } else {\n          // 失败\n          message.error('生成失败')\n          this.setState({\n            question: {\n              title: data[selectArticleIndex].title,\n              answer: selectText,\n              question: '*****************',\n              image: require('./images/none.png')\n            }\n          })\n        }\n      }, secondsToGo * 1000);\n      \n    } else {\n      Modal.error({\n        title: '错误',\n        content: '请先选择文章和答案！'\n      })\n    }\n  }\n\n  render() {\n    const {\n      resultImg,\n      data,\n      selectArticleIndex,\n      selectText,\n      question\n    } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" >\n          <div>\n            <img\n              src={resultImg}\n              className=\"App-logo\"\n              alt=\"\"\n            />\n          </div>\n          <h2 style={{ color: '#FFFFFF' }}>\n            基于深度学习的问题生成系统\n          </h2>\n        </header>\n        <div className=\"container\">\n          <Row gutter={16}>\n            <Col span={14}>\n              <Row gutter={16} style={{ marginBottom: 16 }}>\n                <Col span={18}>\n                  <Select\n                    className=\"article_select\"\n                    placeholder=\"请选择要输入的文章\"\n                    onChange={this.handleSelectArticle}>\n                    {data.map((v, i) => (\n                      <Option value={i} key={v.i}>\n                        {v.title}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={6}>\n                  <Button\n                    type=\"primary\"\n                    style={{ width: \"100%\" }}\n                    onClick={this.addAnswer}>\n                    答案\n                  </Button>\n                </Col>\n              </Row>\n              <Row gutter={16} style={{ marginBottom: 16 }}>\n                <Col span={18}>\n                  <Card style={{ height: 250 }} id=\"article\">\n                    {data[selectArticleIndex] && data[selectArticleIndex].content}\n                  </Card>\n                </Col>\n                <Col span={6}>\n                  <Card style={{ height: 250 }}>{selectText}</Card>\n                </Col>\n              </Row>\n              <Row style={{ marginBottom: 16 }}>\n                <Button\n                  type=\"primary\"\n                  style={{ width: \"100%\" }}\n                  onClick={this.handleGenerate}>\n                  运行系统生成问题\n                </Button>\n              </Row>\n              <Row>\n                <Card title={`文章: ${question.title}`}>\n                  <p>\n                    <b>答案：</b> {question.answer}\n                  </p>\n                  <p>\n                    <b>模型生成的问题：</b> <h3 style={{ display: 'inline', color: 'red' }}>{question.question}</h3>\n                  </p>\n                </Card>\n              </Row>\n            </Col>\n            <Col span={10}>\n              {question.image && (\n                <img src={question.image} style={{ width: '100%' }} alt=\"\" />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}