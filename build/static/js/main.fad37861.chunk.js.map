{"version":3,"sources":["logo.svg","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","title","content","image","question","Option","App","state","resultImg","logo","selectArticleIndex","selectText","answer","listenMouseSelect","id","document","getElementById","onmouseup","_this","setState","window","getSelection","toString","handleSelectArticle","v","addAnswer","modal","confirm","react_default","a","createElement","handleGenerate","_this$state","this","_this$state2","className","row","gutter","col","span","style","marginBottom","es_select","defaultValue","placeholder","onChange","map","i","value","key","es_button","type","width","onClick","card","height","concat","src","alt","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fad37861.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const data = [\n  {\n    title: \"文章-2\",\n    content:\n      \"amh 提供自动备份工具，利用该工具进行立即备份，会同时备份到服务器和第三方云存储，我配置的是七牛云。如果没有配置第三方云存储，则需要下载到自己电脑上，然后上传到重装后的系统上去。\",\n    image: \"http://houser.oss-cn-shanghai.aliyuncs.com/houserpage/houser.jpg\",\n    question: '问题问题问题'\n  },\n  {\n    title: \"文章-3\",\n    content:\n      \"amh 提供自动备份工具，利用该工具进行立即备份，会同时备份到服务器和第三方云存储，我配置的是七牛云。如果没有配置第三方云存储，则需要下载到自己电脑上，然后上传到重装后的系统上去。\",\n    image: \"http://houser.oss-cn-shanghai.aliyuncs.com/houserpage/houser.jpg\",\n    question: '问题问题问题'\n  },\n  {\n    title: \"文章-1\",\n    content:\n      \"amh 提供自动备份工具，利用该工具进行立即备份，会同时备份到服务器和第三方云存储，我配置的是七牛云。如果没有配置第三方云存储，则需要下载到自己电脑上，然后上传到重装后的系统上去。\",\n    image: \"http://houser.oss-cn-shanghai.aliyuncs.com/houserpage/houser.jpg\",\n    question: '问题问题问题'\n  }\n]\n\nexport default data;\n","import React, { Component } from \"react\"\nimport logo from \"./logo.svg\"\nimport { Button, Row, Col, Select, Card, Modal } from \"antd\"\nimport data from \"./data\"\nimport \"./App.css\"\n\nconst { Option } = Select\n\nclass App extends Component {\n  state = {\n    data,\n    resultImg: logo,\n    selectArticleIndex: 0,\n    selectText: \"\", // 选择的文本\n    question: {\n      // 生成的问题\n      title: \"\",\n      answer: \"\",\n      question: \"\",\n      image: null\n    }\n  }\n\n  componentDidMount() {\n    this.listenMouseSelect(\"article\")\n  }\n\n  listenMouseSelect = id => {\n    var oContent = document.getElementById(id)\n    oContent.onmouseup = () => {\n      this.setState({ selectText: window.getSelection().toString() })\n    }\n  }\n\n  handleSelectArticle = v => {\n    this.setState({\n      selectArticleIndex: v\n    })\n  }\n\n  addAnswer = () => {\n    const { selectText } = this.state\n    Modal.confirm({\n      title: \"添加答案\",\n      content: (\n        <p>\n          你选择的答案为:\n          <br />\n          <b>{selectText}</b>\n        </p>\n      )\n    })\n  }\n\n  handleGenerate = () => {\n    const { selectArticleIndex, selectText } = this.state\n    this.setState({\n      question: {\n        title: data[selectArticleIndex].title,\n        answer: selectText,\n        question: data[selectArticleIndex].question,\n        image: data[selectArticleIndex].image\n      }\n    })\n  }\n\n  render() {\n    const {\n      resultImg,\n      data,\n      selectArticleIndex,\n      selectText,\n      question\n    } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <div className=\"container\">\n          <Row gutter={16}>\n            <Col span={14}>\n              <Row gutter={16} style={{ marginBottom: 16 }}>\n                <Col span={18}>\n                  <Select\n                    className=\"article_select\"\n                    defaultValue={0}\n                    placeholder=\"请选择文章\"\n                    onChange={this.handleSelectArticle}>\n                    {data.map((v, i) => (\n                      <Option value={i} key={v.i}>\n                        {v.title}\n                      </Option>\n                    ))}\n                  </Select>\n                </Col>\n                <Col span={6}>\n                  <Button\n                    type=\"primary\"\n                    style={{ width: \"100%\" }}\n                    onClick={this.addAnswer}>\n                    答案\n                  </Button>\n                </Col>\n              </Row>\n              <Row gutter={16} style={{ marginBottom: 16 }}>\n                <Col span={18}>\n                  <Card style={{ height: 250 }} id=\"article\">\n                    {data[selectArticleIndex].content}\n                  </Card>\n                </Col>\n                <Col span={6}>\n                  <Card style={{ height: 250 }}>{selectText}</Card>\n                </Col>\n              </Row>\n              <Row style={{ marginBottom: 16 }}>\n                <Button\n                  type=\"danger\"\n                  style={{ width: \"100%\" }}\n                  onClick={this.handleGenerate}>\n                  运行系统生成问题\n                </Button>\n              </Row>\n              <Row>\n                <Card title={`文章: ${question.title}`}>\n                  <p>\n                    <b>答案：</b> {question.answer}\n                  </p>\n                  <p>\n                    <b>问题：</b> {question.question}\n                  </p>\n                </Card>\n              </Row>\n            </Col>\n            <Col span={10}>\n              {question.image ? (\n                <img src={question.image} style={{ width: '100%' }} alt=\"\" />\n              ) : (\n                <img\n                  src={question.image || resultImg}\n                  className=\"App-logo\"\n                  alt=\"\"\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}